name: CodeChecker

on:
  workflow_dispatch:
    inputs:
      checkout_ref:
        description: "Commit to checkout"
        required: true
        type: string
        default: main

  pull_request:
    types: [opened, reopened, synchronize]

  push:
    branches:
      - "main"

env:
  CODECHECKER_CREDENTIALS: ${{ secrets.CODECHECKER_CREDENTIALS }}
  EAST_CODECHECKER_SERVER_URL: ${{ secrets.CODECHECKER_SERVER_URL }}
  GIT_CREDENTIALS: ${{ secrets.GIT_CREDENTIALS }}

jobs:
  codechecker:
    runs-on: self-hosted-systemd
    container:
      image: ghcr.io/irnas/ncs-zephyr-v3.0.1-ci:latest
    defaults:
      run:
        shell: bash -l {0}
        # Set work dir to "project" for all 'run' calls. Beware, everything else
        # (actions, 'with' params, etc.) still needs to reference full path.
        working-directory: project

    steps:
      - name: Checkout last PR commit
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: project

      - name: Checkout last tag
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_ref }}
          path: project

      - name: Checkout main
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          ref: main
          path: project

      - name: Copy .nrfutil folder to HOME
        run: |
          # This avoid the bug behavior, where the installed nrfutil commands
          # (done in the Dockerfile) are not available, due to the GitHub Action
          # Runner changing the HOME variable.
          # See this issue for more details:
          # https://github.com/IRNAS/irnas-docker-software/issues/9
          cp -r /root/.nrfutil $HOME

      # This is needed due to the later east update (west update) command that
      # could be cloning from the private repos. The provided token in
      # GIT_CREDENTIALS needs to be a fine-grained token, with access to all
      # repositories, with "Read-only" access level to the Content repository
      # permissions.
      - name: Set Git credentials
        run: |
          git config --global credential.helper '!f() { printf "%s\n" "username=runner" "password=$GIT_CREDENTIALS"; };f'

      - name: Retrieve cache
        uses: actions/cache@v4
        env:
          cache-name: cache-modules
        with:
          path: |
            bootloader
            modules
            nrf
            nrfxlib
            test
            tools
            zephyr
          # Note above two lines, if we are caching entire ~/.local/share/east
          # folder then cache action fails during download/extract step
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{
            hashFiles('project/west.yml') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install dependencies
        run: make install-dep

      - name: Setup project
        run: make project-setup

      - name: Login to the server
        run: |
          echo $CODECHECKER_CREDENTIALS > ~/.codechecker.passwords.json
          CodeChecker cmd login --url "${EAST_CODECHECKER_SERVER_URL}"

      - name: Pre-build
        run: make pre-build

      - name: Build
        run: make codechecker-build

      - name: Check
        run: make codechecker-check

      - name: Store
        if: github.event_name == 'workflow_dispatch' || github.event_name ==
          'push'
        run: make codechecker-store

      - name: Diff
        if: github.event_name == 'pull_request'
        run: make codechecker-diff

      - name: Package diffs
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: codechecker-diffs
          path: project/codechecker-diffs/*

      - name: Post-build clean
        if: always()
        # See https://github.com/actions/runner/issues/2058 why
        # github.workspace doesn't work.
        run: rm -rf $GITHUB_WORKSPACE/.west
